/*
 * generated by Xtext 2.15.0
 */
grammar InternalJPCoffe;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package edu.imt.dsl.jpcoffe.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package edu.imt.dsl.jpcoffe.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import edu.imt.dsl.jpcoffe.services.JPCoffeGrammarAccess;

}
@parser::members {
	private JPCoffeGrammarAccess grammarAccess;

	public void setGrammarAccess(JPCoffeGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleMain
entryRuleMain
:
{ before(grammarAccess.getMainRule()); }
	 ruleMain
{ after(grammarAccess.getMainRule()); } 
	 EOF 
;

// Rule Main
ruleMain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getMainAccess().getRecipesAssignment()); }
			(rule__Main__RecipesAssignment)
			{ after(grammarAccess.getMainAccess().getRecipesAssignment()); }
		)
		(
			{ before(grammarAccess.getMainAccess().getRecipesAssignment()); }
			(rule__Main__RecipesAssignment)*
			{ after(grammarAccess.getMainAccess().getRecipesAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRecipe
entryRuleRecipe
:
{ before(grammarAccess.getRecipeRule()); }
	 ruleRecipe
{ after(grammarAccess.getRecipeRule()); } 
	 EOF 
;

// Rule Recipe
ruleRecipe 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRecipeAccess().getGroup()); }
		(rule__Recipe__Group__0)
		{ after(grammarAccess.getRecipeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePortionNB
entryRulePortionNB
:
{ before(grammarAccess.getPortionNBRule()); }
	 rulePortionNB
{ after(grammarAccess.getPortionNBRule()); } 
	 EOF 
;

// Rule PortionNB
rulePortionNB 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPortionNBAccess().getGroup()); }
		(rule__PortionNB__Group__0)
		{ after(grammarAccess.getPortionNBAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIngredientsBlock
entryRuleIngredientsBlock
:
{ before(grammarAccess.getIngredientsBlockRule()); }
	 ruleIngredientsBlock
{ after(grammarAccess.getIngredientsBlockRule()); } 
	 EOF 
;

// Rule IngredientsBlock
ruleIngredientsBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIngredientsBlockAccess().getGroup()); }
		(rule__IngredientsBlock__Group__0)
		{ after(grammarAccess.getIngredientsBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIngredient
entryRuleIngredient
:
{ before(grammarAccess.getIngredientRule()); }
	 ruleIngredient
{ after(grammarAccess.getIngredientRule()); } 
	 EOF 
;

// Rule Ingredient
ruleIngredient 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIngredientAccess().getGroup()); }
		(rule__Ingredient__Group__0)
		{ after(grammarAccess.getIngredientAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQuantity
entryRuleQuantity
:
{ before(grammarAccess.getQuantityRule()); }
	 ruleQuantity
{ after(grammarAccess.getQuantityRule()); } 
	 EOF 
;

// Rule Quantity
ruleQuantity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQuantityAccess().getGroup()); }
		(rule__Quantity__Group__0)
		{ after(grammarAccess.getQuantityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleToolsBlock
entryRuleToolsBlock
:
{ before(grammarAccess.getToolsBlockRule()); }
	 ruleToolsBlock
{ after(grammarAccess.getToolsBlockRule()); } 
	 EOF 
;

// Rule ToolsBlock
ruleToolsBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getToolsBlockAccess().getGroup()); }
		(rule__ToolsBlock__Group__0)
		{ after(grammarAccess.getToolsBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTool
entryRuleTool
:
{ before(grammarAccess.getToolRule()); }
	 ruleTool
{ after(grammarAccess.getToolRule()); } 
	 EOF 
;

// Rule Tool
ruleTool 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getToolAccess().getGroup()); }
		(rule__Tool__Group__0)
		{ after(grammarAccess.getToolAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStepsBlock
entryRuleStepsBlock
:
{ before(grammarAccess.getStepsBlockRule()); }
	 ruleStepsBlock
{ after(grammarAccess.getStepsBlockRule()); } 
	 EOF 
;

// Rule StepsBlock
ruleStepsBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStepsBlockAccess().getGroup()); }
		(rule__StepsBlock__Group__0)
		{ after(grammarAccess.getStepsBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStep
entryRuleStep
:
{ before(grammarAccess.getStepRule()); }
	 ruleStep
{ after(grammarAccess.getStepRule()); } 
	 EOF 
;

// Rule Step
ruleStep 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStepAccess().getGroup()); }
		(rule__Step__Group__0)
		{ after(grammarAccess.getStepAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Recipe__Group__0__Impl
	rule__Recipe__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecipeAccess().getRecipeKeyword_0()); }
	'Recipe'
	{ after(grammarAccess.getRecipeAccess().getRecipeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Recipe__Group__1__Impl
	rule__Recipe__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecipeAccess().getSTRINGTerminalRuleCall_1()); }
	RULE_STRING
	{ after(grammarAccess.getRecipeAccess().getSTRINGTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Recipe__Group__2__Impl
	rule__Recipe__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecipeAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getRecipeAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Recipe__Group__3__Impl
	rule__Recipe__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecipeAccess().getPortionNBParserRuleCall_3()); }
	rulePortionNB
	{ after(grammarAccess.getRecipeAccess().getPortionNBParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Recipe__Group__4__Impl
	rule__Recipe__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecipeAccess().getIngredientsBlockParserRuleCall_4()); }
	ruleIngredientsBlock
	{ after(grammarAccess.getRecipeAccess().getIngredientsBlockParserRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Recipe__Group__5__Impl
	rule__Recipe__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecipeAccess().getToolsBlockParserRuleCall_5()); }
	ruleToolsBlock
	{ after(grammarAccess.getRecipeAccess().getToolsBlockParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Recipe__Group__6__Impl
	rule__Recipe__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecipeAccess().getStepsBlockParserRuleCall_6()); }
	ruleStepsBlock
	{ after(grammarAccess.getRecipeAccess().getStepsBlockParserRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Recipe__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecipeAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getRecipeAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PortionNB__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PortionNB__Group__0__Impl
	rule__PortionNB__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PortionNB__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortionNBAccess().getForKeyword_0()); }
	'For'
	{ after(grammarAccess.getPortionNBAccess().getForKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PortionNB__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PortionNB__Group__1__Impl
	rule__PortionNB__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PortionNB__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortionNBAccess().getNbAssignment_1()); }
	(rule__PortionNB__NbAssignment_1)
	{ after(grammarAccess.getPortionNBAccess().getNbAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PortionNB__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PortionNB__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PortionNB__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortionNBAccess().getPeopleKeyword_2()); }
	('people')?
	{ after(grammarAccess.getPortionNBAccess().getPeopleKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IngredientsBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IngredientsBlock__Group__0__Impl
	rule__IngredientsBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IngredientsBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIngredientsBlockAccess().getIngredientsKeyword_0()); }
	'Ingredients'
	{ after(grammarAccess.getIngredientsBlockAccess().getIngredientsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IngredientsBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IngredientsBlock__Group__1__Impl
	rule__IngredientsBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IngredientsBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIngredientsBlockAccess().getNEW_LINETerminalRuleCall_1()); }
	RULE_NEW_LINE
	{ after(grammarAccess.getIngredientsBlockAccess().getNEW_LINETerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IngredientsBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IngredientsBlock__Group__2__Impl
	rule__IngredientsBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IngredientsBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIngredientsBlockAccess().getTITLE_LINETerminalRuleCall_2()); }
	RULE_TITLE_LINE
	{ after(grammarAccess.getIngredientsBlockAccess().getTITLE_LINETerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IngredientsBlock__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IngredientsBlock__Group__3__Impl
	rule__IngredientsBlock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IngredientsBlock__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIngredientsBlockAccess().getNEW_LINETerminalRuleCall_3()); }
	RULE_NEW_LINE
	{ after(grammarAccess.getIngredientsBlockAccess().getNEW_LINETerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IngredientsBlock__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IngredientsBlock__Group__4__Impl
	rule__IngredientsBlock__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IngredientsBlock__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIngredientsBlockAccess().getIngredientParserRuleCall_4()); }
	(ruleIngredient)*
	{ after(grammarAccess.getIngredientsBlockAccess().getIngredientParserRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IngredientsBlock__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IngredientsBlock__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IngredientsBlock__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIngredientsBlockAccess().getNEW_LINETerminalRuleCall_5()); }
	RULE_NEW_LINE
	{ after(grammarAccess.getIngredientsBlockAccess().getNEW_LINETerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ingredient__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ingredient__Group__0__Impl
	rule__Ingredient__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ingredient__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIngredientAccess().getAsteriskKeyword_0()); }
	'*'
	{ after(grammarAccess.getIngredientAccess().getAsteriskKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ingredient__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ingredient__Group__1__Impl
	rule__Ingredient__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ingredient__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIngredientAccess().getSPACETerminalRuleCall_1()); }
	RULE_SPACE
	{ after(grammarAccess.getIngredientAccess().getSPACETerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ingredient__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ingredient__Group__2__Impl
	rule__Ingredient__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ingredient__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIngredientAccess().getNAMETerminalRuleCall_2()); }
	RULE_NAME
	{ after(grammarAccess.getIngredientAccess().getNAMETerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ingredient__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ingredient__Group__3__Impl
	rule__Ingredient__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Ingredient__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIngredientAccess().getQuantityParserRuleCall_3()); }
	ruleQuantity
	{ after(grammarAccess.getIngredientAccess().getQuantityParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ingredient__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ingredient__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ingredient__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIngredientAccess().getNEW_LINETerminalRuleCall_4()); }
	RULE_NEW_LINE
	{ after(grammarAccess.getIngredientAccess().getNEW_LINETerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Quantity__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Quantity__Group__0__Impl
	rule__Quantity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Quantity__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuantityAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
	{ after(grammarAccess.getQuantityAccess().getINTTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Quantity__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Quantity__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Quantity__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuantityAccess().getMETRIC_UNITTerminalRuleCall_1()); }
	(RULE_METRIC_UNIT)?
	{ after(grammarAccess.getQuantityAccess().getMETRIC_UNITTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ToolsBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ToolsBlock__Group__0__Impl
	rule__ToolsBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ToolsBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getToolsBlockAccess().getToolsKeyword_0()); }
	'Tools'
	{ after(grammarAccess.getToolsBlockAccess().getToolsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ToolsBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ToolsBlock__Group__1__Impl
	rule__ToolsBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ToolsBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getToolsBlockAccess().getNEW_LINETerminalRuleCall_1()); }
	RULE_NEW_LINE
	{ after(grammarAccess.getToolsBlockAccess().getNEW_LINETerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ToolsBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ToolsBlock__Group__2__Impl
	rule__ToolsBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ToolsBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getToolsBlockAccess().getTITLE_LINETerminalRuleCall_2()); }
	RULE_TITLE_LINE
	{ after(grammarAccess.getToolsBlockAccess().getTITLE_LINETerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ToolsBlock__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ToolsBlock__Group__3__Impl
	rule__ToolsBlock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ToolsBlock__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getToolsBlockAccess().getNEW_LINETerminalRuleCall_3()); }
	RULE_NEW_LINE
	{ after(grammarAccess.getToolsBlockAccess().getNEW_LINETerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ToolsBlock__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ToolsBlock__Group__4__Impl
	rule__ToolsBlock__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ToolsBlock__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getToolsBlockAccess().getToolParserRuleCall_4()); }
	(ruleTool)*
	{ after(grammarAccess.getToolsBlockAccess().getToolParserRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ToolsBlock__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ToolsBlock__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ToolsBlock__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getToolsBlockAccess().getNEW_LINETerminalRuleCall_5()); }
	RULE_NEW_LINE
	{ after(grammarAccess.getToolsBlockAccess().getNEW_LINETerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Tool__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tool__Group__0__Impl
	rule__Tool__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tool__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getToolAccess().getAsteriskKeyword_0()); }
	'*'
	{ after(grammarAccess.getToolAccess().getAsteriskKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tool__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tool__Group__1__Impl
	rule__Tool__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Tool__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getToolAccess().getSPACETerminalRuleCall_1()); }
	RULE_SPACE
	{ after(grammarAccess.getToolAccess().getSPACETerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tool__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tool__Group__2__Impl
	rule__Tool__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Tool__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getToolAccess().getNAMETerminalRuleCall_2()); }
	RULE_NAME
	{ after(grammarAccess.getToolAccess().getNAMETerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tool__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tool__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tool__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getToolAccess().getNEW_LINETerminalRuleCall_3()); }
	RULE_NEW_LINE
	{ after(grammarAccess.getToolAccess().getNEW_LINETerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StepsBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepsBlock__Group__0__Impl
	rule__StepsBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StepsBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepsBlockAccess().getStepsKeyword_0()); }
	'Steps'
	{ after(grammarAccess.getStepsBlockAccess().getStepsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepsBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepsBlock__Group__1__Impl
	rule__StepsBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StepsBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepsBlockAccess().getNEW_LINETerminalRuleCall_1()); }
	RULE_NEW_LINE
	{ after(grammarAccess.getStepsBlockAccess().getNEW_LINETerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepsBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepsBlock__Group__2__Impl
	rule__StepsBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StepsBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepsBlockAccess().getTITLE_LINETerminalRuleCall_2()); }
	RULE_TITLE_LINE
	{ after(grammarAccess.getStepsBlockAccess().getTITLE_LINETerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepsBlock__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepsBlock__Group__3__Impl
	rule__StepsBlock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StepsBlock__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepsBlockAccess().getNEW_LINETerminalRuleCall_3()); }
	RULE_NEW_LINE
	{ after(grammarAccess.getStepsBlockAccess().getNEW_LINETerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepsBlock__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepsBlock__Group__4__Impl
	rule__StepsBlock__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StepsBlock__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepsBlockAccess().getStepParserRuleCall_4()); }
	(ruleStep)*
	{ after(grammarAccess.getStepsBlockAccess().getStepParserRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepsBlock__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepsBlock__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StepsBlock__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepsBlockAccess().getNEW_LINETerminalRuleCall_5()); }
	RULE_NEW_LINE
	{ after(grammarAccess.getStepsBlockAccess().getNEW_LINETerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Step__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group__0__Impl
	rule__Step__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getStepAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group__1__Impl
	rule__Step__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getINTTerminalRuleCall_1()); }
	(RULE_INT)?
	{ after(grammarAccess.getStepAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group__2__Impl
	rule__Step__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getGroup_2()); }
	(rule__Step__Group_2__0)*
	{ after(grammarAccess.getStepAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group__3__Impl
	rule__Step__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getStepAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group__4__Impl
	rule__Step__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getSPACETerminalRuleCall_4()); }
	RULE_SPACE
	{ after(grammarAccess.getStepAccess().getSPACETerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group__5__Impl
	rule__Step__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getHyphenMinusGreaterThanSignKeyword_5()); }
	'->'
	{ after(grammarAccess.getStepAccess().getHyphenMinusGreaterThanSignKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group__6__Impl
	rule__Step__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getSPACETerminalRuleCall_6()); }
	RULE_SPACE
	{ after(grammarAccess.getStepAccess().getSPACETerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group__7__Impl
	rule__Step__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getINTTerminalRuleCall_7()); }
	RULE_INT
	{ after(grammarAccess.getStepAccess().getINTTerminalRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group__8__Impl
	rule__Step__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getFullStopKeyword_8()); }
	'.'
	{ after(grammarAccess.getStepAccess().getFullStopKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group__9__Impl
	rule__Step__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getSPACETerminalRuleCall_9()); }
	RULE_SPACE
	{ after(grammarAccess.getStepAccess().getSPACETerminalRuleCall_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group__10__Impl
	rule__Step__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getTEXTTerminalRuleCall_10()); }
	RULE_TEXT
	{ after(grammarAccess.getStepAccess().getTEXTTerminalRuleCall_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getNEW_LINETerminalRuleCall_11()); }
	RULE_NEW_LINE
	{ after(grammarAccess.getStepAccess().getNEW_LINETerminalRuleCall_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Step__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group_2__0__Impl
	rule__Step__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getStepAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getINTTerminalRuleCall_2_1()); }
	RULE_INT
	{ after(grammarAccess.getStepAccess().getINTTerminalRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Main__RecipesAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainAccess().getRecipesRecipeParserRuleCall_0()); }
		ruleRecipe
		{ after(grammarAccess.getMainAccess().getRecipesRecipeParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PortionNB__NbAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortionNBAccess().getNbINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getPortionNBAccess().getNbINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_METRIC_UNIT : ('gr'|'kg'|'cl'|'l');

RULE_TITLE_LINE : '-'+;

RULE_NAME : 'A'..'Z' ('a'..'z'|'A'..'Z'|RULE_SPACE)*;

RULE_NEW_LINE : ('\n'|'\r\n');

RULE_SPACE : ' ';

RULE_TEXT : ('a'..'z'|'A'..'Z')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
