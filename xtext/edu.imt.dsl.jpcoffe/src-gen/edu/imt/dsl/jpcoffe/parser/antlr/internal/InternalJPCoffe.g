/*
 * generated by Xtext 2.15.0
 */
grammar InternalJPCoffe;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package edu.imt.dsl.jpcoffe.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package edu.imt.dsl.jpcoffe.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import edu.imt.dsl.jpcoffe.services.JPCoffeGrammarAccess;

}

@parser::members {

 	private JPCoffeGrammarAccess grammarAccess;

    public InternalJPCoffeParser(TokenStream input, JPCoffeGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Main";
   	}

   	@Override
   	protected JPCoffeGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleMain
entryRuleMain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMainRule()); }
	iv_ruleMain=ruleMain
	{ $current=$iv_ruleMain.current; }
	EOF;

// Rule Main
ruleMain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMainAccess().getImportsImportParserRuleCall_0_0());
				}
				lv_imports_0_0=ruleImport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMainRule());
					}
					add(
						$current,
						"imports",
						lv_imports_0_0,
						"edu.imt.dsl.jpcoffe.JPCoffe.Import");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getMainAccess().getRecipesRecipeParserRuleCall_1_0());
				}
				lv_recipes_1_0=ruleRecipe
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMainRule());
					}
					add(
						$current,
						"recipes",
						lv_recipes_1_0,
						"edu.imt.dsl.jpcoffe.JPCoffe.Recipe");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleImport
entryRuleImport returns [String current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current.getText(); }
	EOF;

// Rule Import
ruleImport returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='use'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getImportAccess().getUseKeyword_0());
		}
		kw='recipe'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getImportAccess().getRecipeKeyword_1());
		}
		{
			newCompositeNode(grammarAccess.getImportAccess().getNAMEParserRuleCall_2());
		}
		this_NAME_2=ruleNAME
		{
			$current.merge(this_NAME_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw='in'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getImportAccess().getInKeyword_3());
		}
		this_STRING_4=RULE_STRING
		{
			$current.merge(this_STRING_4);
		}
		{
			newLeafNode(this_STRING_4, grammarAccess.getImportAccess().getSTRINGTerminalRuleCall_4());
		}
	)
;

// Entry rule entryRuleRecipe
entryRuleRecipe returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRecipeRule()); }
	iv_ruleRecipe=ruleRecipe
	{ $current=$iv_ruleRecipe.current; }
	EOF;

// Rule Recipe
ruleRecipe returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Recipe'
		{
			newLeafNode(otherlv_0, grammarAccess.getRecipeAccess().getRecipeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRecipeAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRecipeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"edu.imt.dsl.jpcoffe.JPCoffe.STRING");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getRecipeAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRecipeAccess().getPortionPortionNBParserRuleCall_3_0());
				}
				lv_portion_3_0=rulePortionNB
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRecipeRule());
					}
					set(
						$current,
						"portion",
						lv_portion_3_0,
						"edu.imt.dsl.jpcoffe.JPCoffe.PortionNB");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRecipeAccess().getIngredientsIngredientsBlockParserRuleCall_4_0());
				}
				lv_ingredients_4_0=ruleIngredientsBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRecipeRule());
					}
					set(
						$current,
						"ingredients",
						lv_ingredients_4_0,
						"edu.imt.dsl.jpcoffe.JPCoffe.IngredientsBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRecipeAccess().getToolsToolsBlockParserRuleCall_5_0());
				}
				lv_tools_5_0=ruleToolsBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRecipeRule());
					}
					set(
						$current,
						"tools",
						lv_tools_5_0,
						"edu.imt.dsl.jpcoffe.JPCoffe.ToolsBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRecipeAccess().getStepsStepsBlockParserRuleCall_6_0());
				}
				lv_steps_6_0=ruleStepsBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRecipeRule());
					}
					set(
						$current,
						"steps",
						lv_steps_6_0,
						"edu.imt.dsl.jpcoffe.JPCoffe.StepsBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getRecipeAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRulePortionNB
entryRulePortionNB returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPortionNBRule()); }
	iv_rulePortionNB=rulePortionNB
	{ $current=$iv_rulePortionNB.current; }
	EOF;

// Rule PortionNB
rulePortionNB returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='For'
		{
			newLeafNode(otherlv_0, grammarAccess.getPortionNBAccess().getForKeyword_0());
		}
		(
			(
				lv_nb_1_0=RULE_INT
				{
					newLeafNode(lv_nb_1_0, grammarAccess.getPortionNBAccess().getNbINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPortionNBRule());
					}
					setWithLastConsumed(
						$current,
						"nb",
						lv_nb_1_0,
						"edu.imt.dsl.jpcoffe.JPCoffe.INT");
				}
			)
		)
		(
			otherlv_2='people'
			{
				newLeafNode(otherlv_2, grammarAccess.getPortionNBAccess().getPeopleKeyword_2());
			}
		)?
	)
;

// Entry rule entryRuleIngredientsBlock
entryRuleIngredientsBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIngredientsBlockRule()); }
	iv_ruleIngredientsBlock=ruleIngredientsBlock
	{ $current=$iv_ruleIngredientsBlock.current; }
	EOF;

// Rule IngredientsBlock
ruleIngredientsBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIngredientsBlockAccess().getIngredientsBlockAction_0(),
					$current);
			}
		)
		otherlv_1='Ingredients'
		{
			newLeafNode(otherlv_1, grammarAccess.getIngredientsBlockAccess().getIngredientsKeyword_1());
		}
		this_TITLE_LINE_2=RULE_TITLE_LINE
		{
			newLeafNode(this_TITLE_LINE_2, grammarAccess.getIngredientsBlockAccess().getTITLE_LINETerminalRuleCall_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getIngredientsBlockAccess().getIngredientsListIngredientsGroupParserRuleCall_3_0_0());
					}
					lv_ingredientsList_3_1=ruleIngredientsGroup
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIngredientsBlockRule());
						}
						add(
							$current,
							"ingredientsList",
							lv_ingredientsList_3_1,
							"edu.imt.dsl.jpcoffe.JPCoffe.IngredientsGroup");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getIngredientsBlockAccess().getIngredientsListIngredientParserRuleCall_3_0_1());
					}
					lv_ingredientsList_3_2=ruleIngredient
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIngredientsBlockRule());
						}
						add(
							$current,
							"ingredientsList",
							lv_ingredientsList_3_2,
							"edu.imt.dsl.jpcoffe.JPCoffe.Ingredient");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleIngredientsGroup
entryRuleIngredientsGroup returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIngredientsGroupRule()); }
	iv_ruleIngredientsGroup=ruleIngredientsGroup
	{ $current=$iv_ruleIngredientsGroup.current; }
	EOF;

// Rule IngredientsGroup
ruleIngredientsGroup returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='*'
		{
			newLeafNode(otherlv_0, grammarAccess.getIngredientsGroupAccess().getAsteriskKeyword_0());
		}
		otherlv_1='GROUP'
		{
			newLeafNode(otherlv_1, grammarAccess.getIngredientsGroupAccess().getGROUPKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_STRING
				{
					newLeafNode(lv_name_2_0, grammarAccess.getIngredientsGroupAccess().getNameSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIngredientsGroupRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"edu.imt.dsl.jpcoffe.JPCoffe.STRING");
				}
			)
		)
		otherlv_3='['
		{
			newLeafNode(otherlv_3, grammarAccess.getIngredientsGroupAccess().getLeftSquareBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIngredientsGroupAccess().getIngredientsListIngredientParserRuleCall_4_0());
				}
				lv_ingredientsList_4_0=ruleIngredient
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIngredientsGroupRule());
					}
					add(
						$current,
						"ingredientsList",
						lv_ingredientsList_4_0,
						"edu.imt.dsl.jpcoffe.JPCoffe.Ingredient");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5=']'
		{
			newLeafNode(otherlv_5, grammarAccess.getIngredientsGroupAccess().getRightSquareBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIngredientsGroupAccess().getQuantityQuantityParserRuleCall_6_0());
				}
				lv_quantity_6_0=ruleQuantity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIngredientsGroupRule());
					}
					set(
						$current,
						"quantity",
						lv_quantity_6_0,
						"edu.imt.dsl.jpcoffe.JPCoffe.Quantity");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleIngredient
entryRuleIngredient returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIngredientRule()); }
	iv_ruleIngredient=ruleIngredient
	{ $current=$iv_ruleIngredient.current; }
	EOF;

// Rule Ingredient
ruleIngredient returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='*'
		{
			newLeafNode(otherlv_0, grammarAccess.getIngredientAccess().getAsteriskKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getIngredientAccess().getOriginalNameNAMEParserRuleCall_1_0_0());
					}
					lv_originalName_1_0=ruleNAME
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIngredientRule());
						}
						add(
							$current,
							"originalName",
							lv_originalName_1_0,
							"edu.imt.dsl.jpcoffe.JPCoffe.NAME");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_2='OR'
				{
					newLeafNode(otherlv_2, grammarAccess.getIngredientAccess().getORKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getIngredientAccess().getOriginalNameNAMEParserRuleCall_1_1_1_0());
						}
						lv_originalName_3_0=ruleNAME
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getIngredientRule());
							}
							add(
								$current,
								"originalName",
								lv_originalName_3_0,
								"edu.imt.dsl.jpcoffe.JPCoffe.NAME");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_4='AS'
			{
				newLeafNode(otherlv_4, grammarAccess.getIngredientAccess().getASKeyword_1_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getIngredientAccess().getNameNAMEParserRuleCall_2_0());
				}
				lv_name_5_0=ruleNAME
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIngredientRule());
					}
					set(
						$current,
						"name",
						lv_name_5_0,
						"edu.imt.dsl.jpcoffe.JPCoffe.NAME");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIngredientAccess().getQuantityQuantityParserRuleCall_3_0());
				}
				lv_quantity_6_0=ruleQuantity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIngredientRule());
					}
					set(
						$current,
						"quantity",
						lv_quantity_6_0,
						"edu.imt.dsl.jpcoffe.JPCoffe.Quantity");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleQuantity
entryRuleQuantity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQuantityRule()); }
	iv_ruleQuantity=ruleQuantity
	{ $current=$iv_ruleQuantity.current; }
	EOF;

// Rule Quantity
ruleQuantity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_amount_0_0=RULE_INT
				{
					newLeafNode(lv_amount_0_0, grammarAccess.getQuantityAccess().getAmountINTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQuantityRule());
					}
					setWithLastConsumed(
						$current,
						"amount",
						lv_amount_0_0,
						"edu.imt.dsl.jpcoffe.JPCoffe.INT");
				}
			)
		)
		(
			(
				lv_unit_1_0=RULE_METRIC_UNIT
				{
					newLeafNode(lv_unit_1_0, grammarAccess.getQuantityAccess().getUnitMETRIC_UNITTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQuantityRule());
					}
					setWithLastConsumed(
						$current,
						"unit",
						lv_unit_1_0,
						"edu.imt.dsl.jpcoffe.JPCoffe.METRIC_UNIT");
				}
			)
		)?
	)
;

// Entry rule entryRuleToolsBlock
entryRuleToolsBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getToolsBlockRule()); }
	iv_ruleToolsBlock=ruleToolsBlock
	{ $current=$iv_ruleToolsBlock.current; }
	EOF;

// Rule ToolsBlock
ruleToolsBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getToolsBlockAccess().getToolsBlockAction_0(),
					$current);
			}
		)
		otherlv_1='Tools'
		{
			newLeafNode(otherlv_1, grammarAccess.getToolsBlockAccess().getToolsKeyword_1());
		}
		this_TITLE_LINE_2=RULE_TITLE_LINE
		{
			newLeafNode(this_TITLE_LINE_2, grammarAccess.getToolsBlockAccess().getTITLE_LINETerminalRuleCall_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getToolsBlockAccess().getToolsListToolParserRuleCall_3_0());
				}
				lv_toolsList_3_0=ruleTool
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getToolsBlockRule());
					}
					add(
						$current,
						"toolsList",
						lv_toolsList_3_0,
						"edu.imt.dsl.jpcoffe.JPCoffe.Tool");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleTool
entryRuleTool returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getToolRule()); }
	iv_ruleTool=ruleTool
	{ $current=$iv_ruleTool.current; }
	EOF;

// Rule Tool
ruleTool returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='*'
		{
			newLeafNode(otherlv_0, grammarAccess.getToolAccess().getAsteriskKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getToolAccess().getOriginalNameNAMEParserRuleCall_1_0_0());
					}
					lv_originalName_1_0=ruleNAME
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getToolRule());
						}
						set(
							$current,
							"originalName",
							lv_originalName_1_0,
							"edu.imt.dsl.jpcoffe.JPCoffe.NAME");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2='AS'
			{
				newLeafNode(otherlv_2, grammarAccess.getToolAccess().getASKeyword_1_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getToolAccess().getNameNAMEParserRuleCall_2_0());
				}
				lv_name_3_0=ruleNAME
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getToolRule());
					}
					set(
						$current,
						"name",
						lv_name_3_0,
						"edu.imt.dsl.jpcoffe.JPCoffe.NAME");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStepsBlock
entryRuleStepsBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStepsBlockRule()); }
	iv_ruleStepsBlock=ruleStepsBlock
	{ $current=$iv_ruleStepsBlock.current; }
	EOF;

// Rule StepsBlock
ruleStepsBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStepsBlockAccess().getStepsBlockAction_0(),
					$current);
			}
		)
		otherlv_1='Steps'
		{
			newLeafNode(otherlv_1, grammarAccess.getStepsBlockAccess().getStepsKeyword_1());
		}
		this_TITLE_LINE_2=RULE_TITLE_LINE
		{
			newLeafNode(this_TITLE_LINE_2, grammarAccess.getStepsBlockAccess().getTITLE_LINETerminalRuleCall_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStepsBlockAccess().getStepsListConditionalStepParserRuleCall_3_0_0());
					}
					lv_stepsList_3_1=ruleConditionalStep
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStepsBlockRule());
						}
						add(
							$current,
							"stepsList",
							lv_stepsList_3_1,
							"edu.imt.dsl.jpcoffe.JPCoffe.ConditionalStep");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getStepsBlockAccess().getStepsListStepParserRuleCall_3_0_1());
					}
					lv_stepsList_3_2=ruleStep
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStepsBlockRule());
						}
						add(
							$current,
							"stepsList",
							lv_stepsList_3_2,
							"edu.imt.dsl.jpcoffe.JPCoffe.Step");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleConditionalStep
entryRuleConditionalStep returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionalStepRule()); }
	iv_ruleConditionalStep=ruleConditionalStep
	{ $current=$iv_ruleConditionalStep.current; }
	EOF;

// Rule ConditionalStep
ruleConditionalStep returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getConditionalStepAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				lv_pred_1_0=RULE_INT
				{
					newLeafNode(lv_pred_1_0, grammarAccess.getConditionalStepAccess().getPredINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConditionalStepRule());
					}
					addWithLastConsumed(
						$current,
						"pred",
						lv_pred_1_0,
						"edu.imt.dsl.jpcoffe.JPCoffe.INT");
				}
			)
		)?
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getConditionalStepAccess().getCommaKeyword_2_0());
			}
			(
				(
					lv_pred_3_0=RULE_INT
					{
						newLeafNode(lv_pred_3_0, grammarAccess.getConditionalStepAccess().getPredINTTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConditionalStepRule());
						}
						addWithLastConsumed(
							$current,
							"pred",
							lv_pred_3_0,
							"edu.imt.dsl.jpcoffe.JPCoffe.INT");
					}
				)
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getConditionalStepAccess().getRightCurlyBracketKeyword_3());
		}
		otherlv_5='->'
		{
			newLeafNode(otherlv_5, grammarAccess.getConditionalStepAccess().getHyphenMinusGreaterThanSignKeyword_4());
		}
		(
			(
				lv_num_6_0=RULE_INT
				{
					newLeafNode(lv_num_6_0, grammarAccess.getConditionalStepAccess().getNumINTTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConditionalStepRule());
					}
					setWithLastConsumed(
						$current,
						"num",
						lv_num_6_0,
						"edu.imt.dsl.jpcoffe.JPCoffe.INT");
				}
			)
		)
		otherlv_7='.'
		{
			newLeafNode(otherlv_7, grammarAccess.getConditionalStepAccess().getFullStopKeyword_6());
		}
		otherlv_8='IF'
		{
			newLeafNode(otherlv_8, grammarAccess.getConditionalStepAccess().getIFKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionalStepAccess().getConditionTEXTParserRuleCall_8_0());
				}
				lv_condition_9_0=ruleTEXT
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionalStepRule());
					}
					set(
						$current,
						"condition",
						lv_condition_9_0,
						"edu.imt.dsl.jpcoffe.JPCoffe.TEXT");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10='THEN'
		{
			newLeafNode(otherlv_10, grammarAccess.getConditionalStepAccess().getTHENKeyword_9());
		}
		(
			(
				lv_to_11_0=RULE_INT
				{
					newLeafNode(lv_to_11_0, grammarAccess.getConditionalStepAccess().getToINTTerminalRuleCall_10_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConditionalStepRule());
					}
					setWithLastConsumed(
						$current,
						"to",
						lv_to_11_0,
						"edu.imt.dsl.jpcoffe.JPCoffe.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleStep
entryRuleStep returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStepRule()); }
	iv_ruleStep=ruleStep
	{ $current=$iv_ruleStep.current; }
	EOF;

// Rule Step
ruleStep returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getStepAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				lv_pred_1_0=RULE_INT
				{
					newLeafNode(lv_pred_1_0, grammarAccess.getStepAccess().getPredINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStepRule());
					}
					addWithLastConsumed(
						$current,
						"pred",
						lv_pred_1_0,
						"edu.imt.dsl.jpcoffe.JPCoffe.INT");
				}
			)
		)?
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getStepAccess().getCommaKeyword_2_0());
			}
			(
				(
					lv_pred_3_0=RULE_INT
					{
						newLeafNode(lv_pred_3_0, grammarAccess.getStepAccess().getPredINTTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStepRule());
						}
						addWithLastConsumed(
							$current,
							"pred",
							lv_pred_3_0,
							"edu.imt.dsl.jpcoffe.JPCoffe.INT");
					}
				)
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getStepAccess().getRightCurlyBracketKeyword_3());
		}
		otherlv_5='->'
		{
			newLeafNode(otherlv_5, grammarAccess.getStepAccess().getHyphenMinusGreaterThanSignKeyword_4());
		}
		(
			(
				lv_num_6_0=RULE_INT
				{
					newLeafNode(lv_num_6_0, grammarAccess.getStepAccess().getNumINTTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStepRule());
					}
					setWithLastConsumed(
						$current,
						"num",
						lv_num_6_0,
						"edu.imt.dsl.jpcoffe.JPCoffe.INT");
				}
			)
		)
		otherlv_7='.'
		{
			newLeafNode(otherlv_7, grammarAccess.getStepAccess().getFullStopKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStepAccess().getTextTEXTParserRuleCall_7_0());
				}
				lv_text_8_0=ruleTEXT
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStepRule());
					}
					set(
						$current,
						"text",
						lv_text_8_0,
						"edu.imt.dsl.jpcoffe.JPCoffe.TEXT");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleNAME
entryRuleNAME returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNAMERule()); }
	iv_ruleNAME=ruleNAME
	{ $current=$iv_ruleNAME.current.getText(); }
	EOF;

// Rule NAME
ruleNAME returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_MAJ_WORD_0=RULE_MAJ_WORD
		{
			$current.merge(this_MAJ_WORD_0);
		}
		{
			newLeafNode(this_MAJ_WORD_0, grammarAccess.getNAMEAccess().getMAJ_WORDTerminalRuleCall_0());
		}
		(
			this_WORD_1=RULE_WORD
			{
				$current.merge(this_WORD_1);
			}
			{
				newLeafNode(this_WORD_1, grammarAccess.getNAMEAccess().getWORDTerminalRuleCall_1());
			}
		)*
	)
;

// Entry rule entryRuleTEXT
entryRuleTEXT returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTEXTRule()); }
	iv_ruleTEXT=ruleTEXT
	{ $current=$iv_ruleTEXT.current.getText(); }
	EOF;

// Rule TEXT
ruleTEXT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_MAJ_WORD_0=RULE_MAJ_WORD
		{
			$current.merge(this_MAJ_WORD_0);
		}
		{
			newLeafNode(this_MAJ_WORD_0, grammarAccess.getTEXTAccess().getMAJ_WORDTerminalRuleCall_0());
		}
		    |
		this_WORD_1=RULE_WORD
		{
			$current.merge(this_WORD_1);
		}
		{
			newLeafNode(this_WORD_1, grammarAccess.getTEXTAccess().getWORDTerminalRuleCall_1());
		}
		    |
		this_INT_2=RULE_INT
		{
			$current.merge(this_INT_2);
		}
		{
			newLeafNode(this_INT_2, grammarAccess.getTEXTAccess().getINTTerminalRuleCall_2());
		}
	)+
;

RULE_METRIC_UNIT : ('gr'|'kg'|'cl'|'l'|'g');

RULE_TITLE_LINE : '-'+;

RULE_MAJ_WORD : 'A'..'Z' ('a'..'z'|'-')*;

RULE_WORD : ('a'..'z'|'A'..'Z'|'\''|','|'-')+;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;
